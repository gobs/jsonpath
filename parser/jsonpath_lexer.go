// Generated from Jsonpath.g4 by ANTLR 4.7.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 24, 153,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7,
	3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11,
	3, 11, 3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3,
	13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 7, 15, 88, 10, 15,
	12, 15, 14, 15, 91, 11, 15, 3, 16, 5, 16, 94, 10, 16, 3, 16, 6, 16, 97,
	10, 16, 13, 16, 14, 16, 98, 3, 17, 5, 17, 102, 10, 17, 3, 17, 6, 17, 105,
	10, 17, 13, 17, 14, 17, 106, 3, 17, 3, 17, 6, 17, 111, 10, 17, 13, 17,
	14, 17, 112, 5, 17, 115, 10, 17, 3, 18, 3, 18, 7, 18, 119, 10, 18, 12,
	18, 14, 18, 122, 11, 18, 3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 5, 19, 129,
	10, 19, 3, 20, 3, 20, 3, 21, 3, 21, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22,
	3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 5, 22, 145, 10, 22, 3, 23, 6, 23, 148,
	10, 23, 13, 23, 14, 23, 149, 3, 23, 3, 23, 2, 2, 24, 3, 3, 5, 4, 7, 5,
	9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27,
	15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45,
	24, 3, 2, 7, 4, 2, 67, 92, 99, 124, 5, 2, 50, 59, 67, 92, 99, 124, 3, 2,
	41, 41, 5, 2, 44, 45, 47, 47, 49, 49, 5, 2, 11, 12, 15, 15, 34, 34, 2,
	167, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2,
	2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3,
	2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25,
	3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2,
	33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2,
	2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 3, 47, 3, 2, 2,
	2, 5, 49, 3, 2, 2, 2, 7, 51, 3, 2, 2, 2, 9, 53, 3, 2, 2, 2, 11, 55, 3,
	2, 2, 2, 13, 57, 3, 2, 2, 2, 15, 60, 3, 2, 2, 2, 17, 62, 3, 2, 2, 2, 19,
	64, 3, 2, 2, 2, 21, 67, 3, 2, 2, 2, 23, 70, 3, 2, 2, 2, 25, 73, 3, 2, 2,
	2, 27, 82, 3, 2, 2, 2, 29, 85, 3, 2, 2, 2, 31, 93, 3, 2, 2, 2, 33, 101,
	3, 2, 2, 2, 35, 116, 3, 2, 2, 2, 37, 128, 3, 2, 2, 2, 39, 130, 3, 2, 2,
	2, 41, 132, 3, 2, 2, 2, 43, 144, 3, 2, 2, 2, 45, 147, 3, 2, 2, 2, 47, 48,
	7, 38, 2, 2, 48, 4, 3, 2, 2, 2, 49, 50, 7, 93, 2, 2, 50, 6, 3, 2, 2, 2,
	51, 52, 7, 95, 2, 2, 52, 8, 3, 2, 2, 2, 53, 54, 7, 60, 2, 2, 54, 10, 3,
	2, 2, 2, 55, 56, 7, 46, 2, 2, 56, 12, 3, 2, 2, 2, 57, 58, 7, 65, 2, 2,
	58, 59, 7, 42, 2, 2, 59, 14, 3, 2, 2, 2, 60, 61, 7, 43, 2, 2, 61, 16, 3,
	2, 2, 2, 62, 63, 7, 42, 2, 2, 63, 18, 3, 2, 2, 2, 64, 65, 7, 40, 2, 2,
	65, 66, 7, 40, 2, 2, 66, 20, 3, 2, 2, 2, 67, 68, 7, 126, 2, 2, 68, 69,
	7, 126, 2, 2, 69, 22, 3, 2, 2, 2, 70, 71, 7, 66, 2, 2, 71, 72, 7, 48, 2,
	2, 72, 24, 3, 2, 2, 2, 73, 74, 7, 66, 2, 2, 74, 75, 7, 48, 2, 2, 75, 76,
	7, 110, 2, 2, 76, 77, 7, 103, 2, 2, 77, 78, 7, 112, 2, 2, 78, 79, 7, 105,
	2, 2, 79, 80, 7, 118, 2, 2, 80, 81, 7, 106, 2, 2, 81, 26, 3, 2, 2, 2, 82,
	83, 7, 63, 2, 2, 83, 84, 7, 128, 2, 2, 84, 28, 3, 2, 2, 2, 85, 89, 9, 2,
	2, 2, 86, 88, 9, 3, 2, 2, 87, 86, 3, 2, 2, 2, 88, 91, 3, 2, 2, 2, 89, 87,
	3, 2, 2, 2, 89, 90, 3, 2, 2, 2, 90, 30, 3, 2, 2, 2, 91, 89, 3, 2, 2, 2,
	92, 94, 7, 47, 2, 2, 93, 92, 3, 2, 2, 2, 93, 94, 3, 2, 2, 2, 94, 96, 3,
	2, 2, 2, 95, 97, 4, 50, 59, 2, 96, 95, 3, 2, 2, 2, 97, 98, 3, 2, 2, 2,
	98, 96, 3, 2, 2, 2, 98, 99, 3, 2, 2, 2, 99, 32, 3, 2, 2, 2, 100, 102, 7,
	47, 2, 2, 101, 100, 3, 2, 2, 2, 101, 102, 3, 2, 2, 2, 102, 104, 3, 2, 2,
	2, 103, 105, 4, 50, 59, 2, 104, 103, 3, 2, 2, 2, 105, 106, 3, 2, 2, 2,
	106, 104, 3, 2, 2, 2, 106, 107, 3, 2, 2, 2, 107, 114, 3, 2, 2, 2, 108,
	110, 7, 48, 2, 2, 109, 111, 4, 50, 59, 2, 110, 109, 3, 2, 2, 2, 111, 112,
	3, 2, 2, 2, 112, 110, 3, 2, 2, 2, 112, 113, 3, 2, 2, 2, 113, 115, 3, 2,
	2, 2, 114, 108, 3, 2, 2, 2, 114, 115, 3, 2, 2, 2, 115, 34, 3, 2, 2, 2,
	116, 120, 7, 41, 2, 2, 117, 119, 10, 4, 2, 2, 118, 117, 3, 2, 2, 2, 119,
	122, 3, 2, 2, 2, 120, 118, 3, 2, 2, 2, 120, 121, 3, 2, 2, 2, 121, 123,
	3, 2, 2, 2, 122, 120, 3, 2, 2, 2, 123, 124, 7, 41, 2, 2, 124, 36, 3, 2,
	2, 2, 125, 129, 7, 48, 2, 2, 126, 127, 7, 48, 2, 2, 127, 129, 7, 48, 2,
	2, 128, 125, 3, 2, 2, 2, 128, 126, 3, 2, 2, 2, 129, 38, 3, 2, 2, 2, 130,
	131, 7, 44, 2, 2, 131, 40, 3, 2, 2, 2, 132, 133, 9, 5, 2, 2, 133, 42, 3,
	2, 2, 2, 134, 145, 7, 64, 2, 2, 135, 136, 7, 64, 2, 2, 136, 145, 7, 63,
	2, 2, 137, 145, 7, 62, 2, 2, 138, 139, 7, 62, 2, 2, 139, 145, 7, 63, 2,
	2, 140, 141, 7, 63, 2, 2, 141, 145, 7, 63, 2, 2, 142, 143, 7, 35, 2, 2,
	143, 145, 7, 63, 2, 2, 144, 134, 3, 2, 2, 2, 144, 135, 3, 2, 2, 2, 144,
	137, 3, 2, 2, 2, 144, 138, 3, 2, 2, 2, 144, 140, 3, 2, 2, 2, 144, 142,
	3, 2, 2, 2, 145, 44, 3, 2, 2, 2, 146, 148, 9, 6, 2, 2, 147, 146, 3, 2,
	2, 2, 148, 149, 3, 2, 2, 2, 149, 147, 3, 2, 2, 2, 149, 150, 3, 2, 2, 2,
	150, 151, 3, 2, 2, 2, 151, 152, 8, 23, 2, 2, 152, 46, 3, 2, 2, 2, 14, 2,
	89, 93, 98, 101, 106, 112, 114, 120, 128, 144, 149, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'$'", "'['", "']'", "':'", "','", "'?('", "')'", "'('", "'&&'", "'||'",
	"'@.'", "'@.length'", "'=~'", "", "", "", "", "", "'*'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "Identifier", "INT",
	"NUMBER", "QUOTED", "DOTS", "STAR", "OP", "COMP", "WS",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "T__12", "Identifier", "INT", "NUMBER", "QUOTED",
	"DOTS", "STAR", "OP", "COMP", "WS",
}

type JsonpathLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewJsonpathLexer(input antlr.CharStream) *JsonpathLexer {

	l := new(JsonpathLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Jsonpath.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// JsonpathLexer tokens.
const (
	JsonpathLexerT__0       = 1
	JsonpathLexerT__1       = 2
	JsonpathLexerT__2       = 3
	JsonpathLexerT__3       = 4
	JsonpathLexerT__4       = 5
	JsonpathLexerT__5       = 6
	JsonpathLexerT__6       = 7
	JsonpathLexerT__7       = 8
	JsonpathLexerT__8       = 9
	JsonpathLexerT__9       = 10
	JsonpathLexerT__10      = 11
	JsonpathLexerT__11      = 12
	JsonpathLexerT__12      = 13
	JsonpathLexerIdentifier = 14
	JsonpathLexerINT        = 15
	JsonpathLexerNUMBER     = 16
	JsonpathLexerQUOTED     = 17
	JsonpathLexerDOTS       = 18
	JsonpathLexerSTAR       = 19
	JsonpathLexerOP         = 20
	JsonpathLexerCOMP       = 21
	JsonpathLexerWS         = 22
)
